{"ast":null,"code":"import _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _jsxFileName = \"D:\\\\Node js\\\\IOT_project\\\\Demo app\\\\readerComopnent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { flexWrap } from \"styled-system\";\nimport React from \"React\";\nimport NodeFetch from 'node-fetch';\n\nvar Property = function () {\n  function Property() {\n    _classCallCheck(this, Property);\n\n    this.url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\n    this.settings = {\n      method: \"Get\"\n    };\n  }\n\n  _createClass(Property, [{\n    key: \"getUser\",\n    value: function (_getUser) {\n      function getUser() {\n        return _getUser.apply(this, arguments);\n      }\n\n      getUser.toString = function () {\n        return _getUser.toString();\n      };\n\n      return getUser;\n    }(function () {\n      fetch(this.url, this.settings).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        names = JSON.stringify(json.feeds[0].field3);\n        return names;\n      });\n      this.baba = getUser();\n      value = \"Good is nothing \";\n    })\n  }]);\n\n  return Property;\n}();\n\nvar good = \"Fine.gooodies\";\n\nvar Welcome = function (_React$Component) {\n  _inherits(Welcome, _React$Component);\n\n  var _super = _createSuper(Welcome);\n\n  function Welcome() {\n    var _this;\n\n    _classCallCheck(this, Welcome);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\n    _this.settings = {\n      method: \"Get\"\n    };\n    _this.names = \"baba\";\n    return _this;\n  }\n\n  _createClass(Welcome, [{\n    key: \"getuser\",\n    value: function getuser() {\n      fetch(url, settings).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n      });\n      this.baba = getUser();\n      this.names = \"sunil\";\n      this.names = \"Good is nothing \";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, good, \" \", this.names);\n    }\n  }]);\n\n  return Welcome;\n}(React.Component);\n\nexport default Welcome;","map":{"version":3,"sources":["D:/Node js/IOT_project/Demo app/readerComopnent.js"],"names":["flexWrap","React","NodeFetch","Property","url","settings","method","fetch","then","res","json","names","JSON","stringify","feeds","field3","baba","getUser","value","good","Welcome","console","log","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAMMC,Q;;;;SAEJC,G,GAAM,iE;SAENC,Q,GAAW;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;;;;;;;;;;;;;;;MAGX,YAAU;AAAGC,MAAAA,KAAK,CAAC,KAAKH,GAAN,EAAW,KAAKC,QAAhB,CAAL,CACVG,IADU,CACL,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADE,EAEVF,IAFU,CAEL,UAACE,IAAD,EAAU;AAGZC,QAAAA,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcC,MAA7B,CAAR;AAEA,eAAOJ,KAAP;AAoBH,OA3BU;AA4BX,WAAKK,IAAL,GAAUC,OAAO,EAAjB;AAGFC,MAAAA,KAAK,GAAC,kBAAN;AACD,K;;;;;;AAED,IAAMC,IAAI,GAAC,eAAX;;IAUMC,O;;;;;;;;;;;;;;;UAQJhB,G,GAAM,iE;UAENC,Q,GAAW;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;UACXK,K,GAAM,M;;;;;;WACN,mBAAS;AAACJ,MAAAA,KAAK,CAACH,GAAD,EAAKC,QAAL,CAAL,CACPG,IADO,CACF,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADD,EAEPF,IAFO,CAEF,UAACE,IAAD,EAAU;AAIZW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAuBH,OA7BO;AA8BR,WAAKM,IAAL,GAAUC,OAAO,EAAjB;AACA,WAAKN,KAAL,GAAW,OAAX;AAEF,WAAKA,KAAL,GAAW,kBAAX;AACC;;;WACC,kBAAS;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKQ,IAAL,OAAY,KAAKR,KAAjB,CADF;AAGD;;;;EApDiBV,KAAK,CAACsB,S;;AAuD5B,eAAeH,OAAf","sourcesContent":["import { flexWrap } from \"styled-system\";\r\nimport React from \"React\"\r\nimport NodeFetch from 'node-fetch' \r\n// import {fetch as fetchPolyfill} from 'whatwg-fetch'\r\n\r\n\r\n\r\n\r\nclass Property {\r\n\r\n  url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\r\n\r\n  settings = { method: \"Get\" };\r\n\r\n  pop \r\n  getUser() {  fetch(this.url, this.settings)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n        // do something with JSON\r\n        // console.log(json)\r\n        names = JSON.stringify(json.feeds[0].field3)\r\n\r\n        return names\r\n\r\n        // var channel = json.channel\r\n        // var feeds = json.feeds\r\n        // var newvara = JSON.parse(vara)\r\n        // var obj = newvara.entry_id\r\n\r\n        // console.log(channel)\r\n        // console.log(feeds)\r\n        // for (let v in feeds){\r\n        //     console.log(v)\r\n        //     for (let y in v){\r\n        //         console.log(y)\r\n        //     }\r\n        //     console.log(\"printed\")\r\n        // }\r\n        // var buf =feeds[0].field3;\r\n        // this.pop =buf\r\n        // console.log(buf);\r\n\r\n    });\r\n    this.baba=getUser()\r\n\r\n\r\n  value=\"Good is nothing \"\r\n}\r\n}\r\nconst good=\"Fine.gooodies\"\r\n// let bad=thisFunction()\r\n// console.log(good)\r\n\r\n// const hii= new Apivalue\r\n\r\n// console.log(hii.value);\r\n\r\n\r\n\r\nclass Welcome extends React.Component {\r\n    // vav = new Property\r\n    // babas=vav.getUser()\r\n    // constructor(props) {\r\n    //   super(props);\r\n    //   this.state = \"\"\r\n    // }\r\n    \r\n  url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\r\n\r\n  settings = { method: \"Get\" };\r\n  names=\"baba\"\r\n  getuser(){fetch(url,settings)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n      // this.setState = \"sumit\";\r\n        // this.names=\"Anil\"\r\n        // // do something with JSON\r\n        console.log(json)\r\n        // name1 = JSON.stringify(json.feeds[0].field3)\r\n\r\n        // return name1\r\n\r\n        // var channel = json.channel\r\n        // var feeds = json.feeds\r\n        // var newvara = JSON.parse(vara)\r\n        // var obj = newvara.entry_id\r\n\r\n        // console.log(channel)\r\n        // console.log(feeds)\r\n        // for (let v in feeds){\r\n        //     console.log(v)\r\n        //     for (let y in v){\r\n        //         console.log(y)\r\n        //     }\r\n        //     console.log(\"printed\")\r\n        // }\r\n        // var buf =feeds[0].field3;\r\n        // this.pop =buf\r\n        // console.log(buf);\r\n\r\n    });\r\n    this.baba=getUser()\r\n    this.names=\"sunil\"\r\n  \r\n  this.names=\"Good is nothing \"\r\n  }\r\n    render() {\r\n\r\n      return (\r\n        <h1>{good} {this.names}</h1>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}