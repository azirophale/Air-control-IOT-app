{"ast":null,"code":"import _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _jsxFileName = \"D:\\\\Node js\\\\IOT_project\\\\Demo app\\\\readerComopnent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { flexWrap } from \"styled-system\";\nimport React from \"React\";\nimport NodeFetch from 'node-fetch';\nimport { fetch as fetchPolyfill } from 'whatwg-fetch';\n\nvar Apivalue = function () {\n  function Apivalue() {\n    var _this = this;\n\n    _classCallCheck(this, Apivalue);\n\n    this.url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\n    this.settings = {\n      method: \"Get\"\n    };\n    this.val = fetch(this.url, this.settings).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      var channel = json.channel;\n      var feeds = json.feeds;\n      var buf = feeds[0].field3;\n      var good = buf.good;\n      console.log(buf);\n      _this.value = buf;\n    });\n  }\n\n  _createClass(Apivalue, [{\n    key: \"details\",\n    value: function details() {\n      return this.value;\n    }\n  }]);\n\n  return Apivalue;\n}();\n\nvar good = \"Fine.gooodies\";\nconsole.log(good);\n\nvar Welcome = function (_React$Component) {\n  _inherits(Welcome, _React$Component);\n\n  var _super = _createSuper(Welcome);\n\n  function Welcome() {\n    var _this2;\n\n    _classCallCheck(this, Welcome);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.vav = new Apivalue();\n    return _this2;\n  }\n\n  _createClass(Welcome, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, _get(_getPrototypeOf(Welcome.prototype), \"value\", this), \" \");\n    }\n  }]);\n\n  return Welcome;\n}(React.Component);\n\nexport default Welcome;","map":{"version":3,"sources":["D:/Node js/IOT_project/Demo app/readerComopnent.js"],"names":["flexWrap","React","NodeFetch","fetch","fetchPolyfill","Apivalue","url","settings","method","val","then","res","json","channel","feeds","buf","field3","good","console","log","value","Welcome","vav","Component"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,KAAK,IAAIC,aAAjB,QAAqC,cAArC;;IAIMC,Q;;;;;;SAaJC,G,GAAM,iE;SAONC,Q,GAAW;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;SAGXC,G,GAAMN,KAAK,CAAC,KAAKG,GAAN,EAAW,KAAKC,QAAhB,CAAL,CACHG,IADG,CACE,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADL,EAEHF,IAFG,CAEE,UAACE,IAAD,EAAU;AAGZ,UAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AACA,UAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AAIA,UAAIC,GAAG,GAAED,KAAK,CAAC,CAAD,CAAL,CAASE,MAAlB;AACA,UAAOC,IAAP,GAAaF,GAAb,CAAOE,IAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAEA,MAAA,KAAI,CAACK,KAAL,GAAWL,GAAX;AAEH,KAhBG,C;;;;;WAkBJ,mBAAU;AACR,aAAO,KAAKK,KAAZ;AAED;;;;;;AAIL,IAAMH,IAAI,GAAC,eAAX;AAEAC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;IAKMI,O;;;;;;;;;;;;;;;WAIJC,G,GAAK,IAAIjB,QAAJ,E;;;;;;WACH,kBAAS;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEADF;AAGD;;;;EAViBJ,KAAK,CAACsB,S;;AAa5B,eAAeF,OAAf","sourcesContent":["import { flexWrap } from \"styled-system\";\r\nimport React from \"React\"\r\nimport NodeFetch from 'node-fetch' \r\nimport {fetch as fetchPolyfill} from 'whatwg-fetch'\r\n\r\n\r\n\r\nclass Apivalue{\r\n  // constructor (props) {\r\n  //   super(props);\r\n  //   this.value = \"\";\r\n  //   this.last = \"\";\r\n  //   this.url = \"\";\r\n  //   this.settings = \"\";\r\n  //   this.val = \"\";\r\n    \r\n    \r\n  // }\r\n  \r\n  // for only last 2 datas \r\n  url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\r\n\r\n  // let url = \"https://api.thingspeak.com/channels/838448/field1.json\";\r\n\r\n  // for whole data \r\n  // let url = \"https://api.thingspeak.com/channels/838448/feeds.json\";\r\n\r\n  settings = { method: \"Get\" };\r\n\r\n\r\n  val = fetch(this.url, this.settings)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n        // do something with JSON\r\n        // console.log(json)\r\n        var channel = json.channel\r\n        var feeds = json.feeds\r\n\r\n        // console.log(channel)\r\n        // console.log(feeds)\r\n        var buf =feeds[0].field3;\r\n        const {good}=buf\r\n        console.log(buf);\r\n        // window.$value55=buf\r\n        this.value=buf     \r\n        // return buf;  \r\n    });\r\n\r\n    details() {\r\n      return this.value\r\n      \r\n    }\r\n}\r\n    \r\n\r\nconst good=\"Fine.gooodies\"\r\n// let bad=thisFunction()\r\nconsole.log(good)\r\n\r\n// const hii= new Apivalue\r\n\r\n// console.log(hii.details);\r\nclass Welcome extends React.Component {\r\n  \r\n\r\n  \r\n  vav= new Apivalue\r\n    render() {\r\n\r\n      return (\r\n        <h1>{super.value} {}</h1>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}