{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar _jsxFileName = \"D:\\\\Node js\\\\IOT_project\\\\Demo app\\\\readerComopnent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { flexWrap } from \"styled-system\";\nimport React from \"React\";\nimport NodeFetch from 'node-fetch';\n\nvar Property = function Property() {\n  _classCallCheck(this, Property);\n\n  this.url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\n  this.settings = {\n    method: \"Get\"\n  };\n  this.valas = fetch(this.url, this.settings).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    console.log(json);\n    var feeds = json.feeds;\n  });\n  this.value = \"Good is nothing \";\n};\n\nvar good = \"Fine.gooodies\";\n\nvar Welcome = function (_React$Component) {\n  _inherits(Welcome, _React$Component);\n\n  var _super = _createSuper(Welcome);\n\n  function Welcome() {\n    var _this;\n\n    _classCallCheck(this, Welcome);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.vav = new Property();\n    return _this;\n  }\n\n  _createClass(Welcome, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, good, \" \", this.vav.value);\n    }\n  }]);\n\n  return Welcome;\n}(React.Component);\n\nexport default Welcome;","map":{"version":3,"sources":["D:/Node js/IOT_project/Demo app/readerComopnent.js"],"names":["flexWrap","React","NodeFetch","Property","url","settings","method","valas","fetch","then","res","json","console","log","feeds","value","good","Welcome","vav","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAMMC,Q;;;OAEJC,G,GAAM,iE;OAENC,Q,GAAW;AAAEC,IAAAA,MAAM,EAAE;AAAV,G;OAGXC,K,GAAQC,KAAK,CAAC,KAAKJ,GAAN,EAAW,KAAKC,QAAhB,CAAL,CACLI,IADK,CACA,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADH,EAELF,IAFK,CAEA,UAACE,IAAD,EAAU;AAEZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAGA,QAAIG,KAAK,GAAGH,IAAI,CAACG,KAAjB;AAiBH,GAxBK,C;OA2BRC,K,GAAM,kB;;;AAER,IAAMC,IAAI,GAAC,eAAX;;IASMC,O;;;;;;;;;;;;;;;UACFC,G,GAAM,IAAIf,QAAJ,E;;;;;;WACN,kBAAS;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKa,IAAL,OAAY,KAAKE,GAAL,CAASH,KAArB,CADF;AAGD;;;;EAPiBd,KAAK,CAACkB,S;;AAU5B,eAAeF,OAAf","sourcesContent":["import { flexWrap } from \"styled-system\";\r\nimport React from \"React\"\r\nimport NodeFetch from 'node-fetch' \r\n// import {fetch as fetchPolyfill} from 'whatwg-fetch'\r\n\r\n\r\n\r\n\r\nclass Property {\r\n\r\n  url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\r\n\r\n  settings = { method: \"Get\" };\r\n\r\n  pop \r\n  valas=  fetch(this.url, this.settings)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n        // do something with JSON\r\n        console.log(json)\r\n\r\n        // var channel = json.channel\r\n        var feeds = json.feeds\r\n        // var newvara = JSON.parse(vara)\r\n        // var obj = newvara.entry_id\r\n\r\n        // console.log(channel)\r\n        // console.log(feeds)\r\n        // for (let v in feeds){\r\n        //     console.log(v)\r\n        //     for (let y in v){\r\n        //         console.log(y)\r\n        //     }\r\n        //     console.log(\"printed\")\r\n        // }\r\n        // var buf =feeds[0].field3;\r\n\r\n        // console.log(buf);\r\n\r\n    });\r\n\r\n\r\n  value=\"Good is nothing \"\r\n}\r\nconst good=\"Fine.gooodies\"\r\n// let bad=thisFunction()\r\n// console.log(good)\r\n\r\n// const hii= new Apivalue\r\n\r\n// console.log(hii.value);\r\n\r\n\r\nclass Welcome extends React.Component {\r\n    vav = new Property\r\n    render() {\r\n\r\n      return (\r\n        <h1>{good} {this.vav.value}</h1>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}