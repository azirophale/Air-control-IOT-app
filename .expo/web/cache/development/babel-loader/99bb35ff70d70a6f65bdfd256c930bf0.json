{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { flexWrap } from \"styled-system\";\nimport React from \"React\";\nimport NodeFetch from 'node-fetch';\n\nvar Welcome = function (_React$Component) {\n  _inherits(Welcome, _React$Component);\n\n  var _super = _createSuper(Welcome);\n\n  function Welcome() {\n    _classCallCheck(this, Welcome);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Welcome, [{\n    key: \"render\",\n    value: function render() {\n      return fetch('https://api.thingspeak.com/channels/838448/feeds.json').then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log('parsed json', json);\n      }).catch(function (ex) {\n        console.log('parsing failed', ex);\n      });\n    }\n  }]);\n\n  return Welcome;\n}(React.Component);\n\nexport default Welcome;","map":{"version":3,"sources":["D:/Node js/IOT_project/Demo app/readerComopnent.js"],"names":["flexWrap","React","NodeFetch","Welcome","fetch","then","response","json","console","log","catch","ex","Component"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAKMC,O;;;;;;;;;;;;;WACF,kBAAS;AAGP,aAGEC,KAAK,CAAC,uDAAD,CAAL,CACLC,IADK,CACA,UAASC,QAAT,EAAmB;AACvB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHK,EAGHF,IAHG,CAGE,UAASE,IAAT,EAAe;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;AACD,OALK,EAKHG,KALG,CAKG,UAASC,EAAT,EAAa;AACpBH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,EAA9B;AACD,OAPK,CAHF;AAcD;;;;EAlBiBV,KAAK,CAACW,S;;AAqB5B,eAAeT,OAAf","sourcesContent":["import { flexWrap } from \"styled-system\";\r\nimport React from \"React\"\r\nimport NodeFetch from 'node-fetch' \r\n\r\n\r\n\r\n\r\nclass Welcome extends React.Component {\r\n    render() {\r\n        \r\n\r\n      return (\r\n          \r\n        \r\n        fetch('https://api.thingspeak.com/channels/838448/feeds.json')\r\n  .then(function(response) {\r\n    return response.json()\r\n  }).then(function(json) {\r\n    console.log('parsed json', json)\r\n  }).catch(function(ex) {\r\n    console.log('parsing failed', ex)\r\n  })\r\n\r\n        // <h1>Hello, {this.props.name}</h1>;\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}