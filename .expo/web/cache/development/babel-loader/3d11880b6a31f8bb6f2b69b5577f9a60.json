{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Node js\\\\IOT_project\\\\Demo app\\\\readerComopnent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { flexWrap } from \"styled-system\";\nimport React from \"React\";\nimport NodeFetch from 'node-fetch';\nimport { fetch as fetchPolyfill } from 'whatwg-fetch';\n\nvar getData = function getData() {\n  fetch('https://api.thingspeak.com/channels/838448/feeds.json', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }).then(function (response) {\n    console.log(response);\n    return response.json();\n  }).then(function (myJson) {\n    console.log(myJson);\n  });\n};\n\nuseEffect(function () {\n  getData();\n}, []);\nvar good = \"fines i me \";\n\nvar Welcome = function (_React$Component) {\n  _inherits(Welcome, _React$Component);\n\n  var _super = _createSuper(Welcome);\n\n  function Welcome() {\n    _classCallCheck(this, Welcome);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Welcome, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, good, \" \", this.props.name);\n    }\n  }]);\n\n  return Welcome;\n}(React.Component);\n\nexport default Welcome;","map":{"version":3,"sources":["D:/Node js/IOT_project/Demo app/readerComopnent.js"],"names":["flexWrap","React","NodeFetch","fetch","fetchPolyfill","getData","headers","then","response","console","log","json","myJson","useEffect","good","Welcome","props","name","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,KAAK,IAAIC,aAAjB,QAAqC,cAArC;;AAoBA,IAAMC,OAAO,GAAC,SAARA,OAAQ,GAAI;AACdF,EAAAA,KAAK,CAAC,uDAAD,EACJ;AACCG,IAAAA,OAAO,EAAG;AACR,sBAAgB,kBADR;AAER,gBAAU;AAFF;AADX,GADI,CAAL,CAQGC,IARH,CAQQ,UAASC,QAAT,EAAkB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,GAXH,EAYGJ,IAZH,CAYQ,UAASK,MAAT,EAAiB;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACD,GAdH;AAeD,CAhBH;;AAiBEC,SAAS,CAAC,YAAI;AACZR,EAAAA,OAAO;AACR,CAFQ,EAEP,EAFO,CAAT;AAOF,IAAMS,IAAI,GAAC,aAAX;;IAEMC,O;;;;;;;;;;;;;WACF,kBAAS;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAL,OAAY,KAAKE,KAAL,CAAWC,IAAvB,CADF;AAGD;;;;EANiBhB,KAAK,CAACiB,S;;AAS5B,eAAeH,OAAf","sourcesContent":["import { flexWrap } from \"styled-system\";\r\nimport React from \"React\"\r\nimport NodeFetch from 'node-fetch' \r\nimport {fetch as fetchPolyfill} from 'whatwg-fetch'\r\n\r\n\r\n// let url = \"https://api.thingspeak.com/channels/838448/feeds.json\";\r\n\r\n// let settings = { method: \"Get\" };\r\n\r\n// // const good=\"bye\"\r\n\r\n// fetch(url, settings)\r\n//     .then(res => res.json())\r\n//     .then((json) => {\r\n//         // do something with JSON\r\n//         // console.log(json)\r\n//         var obj=JSON.parse(json)\r\n//         var data=obj.field3\r\n//         console.log(data)\r\n//         // const good=\"hello\"    \r\n//     });\r\n\r\nconst getData=()=>{\r\n    fetch('https://api.thingspeak.com/channels/838448/feeds.json'\r\n    ,{\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n    }\r\n    )\r\n      .then(function(response){\r\n        console.log(response)\r\n        return response.json();\r\n      })\r\n      .then(function(myJson) {\r\n        console.log(myJson);\r\n      });\r\n  }\r\n  useEffect(()=>{\r\n    getData()\r\n  },[])\r\n\r\n\r\n\r\n\r\nconst good=\"fines i me \"\r\n\r\nclass Welcome extends React.Component {\r\n    render() {\r\n        \r\n      return (\r\n        <h1>{good} {this.props.name}</h1>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}