{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Node js\\\\IOT_project\\\\Demo app\\\\readerComopnent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { flexWrap } from \"styled-system\";\nimport React from \"React\";\nimport NodeFetch from 'node-fetch';\nimport { fetch as fetchPolyfill } from 'whatwg-fetch';\nvar url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\nvar settings = {\n  method: \"Get\"\n};\nfetch(url, settings).then(function (res) {\n  return res.json();\n}).then(function (json) {\n  var channel = json.channel;\n  var feeds = json.feeds;\n  var buf = feeds[0].field3;\n  var good = buf.good;\n  console.log(buf);\n  return buf;\n});\n\nvar nice = function iwillfetch() {\n  var buf;\n  fetch(url, settings).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    var feeds = json.feeds;\n    buf = feeds[0].field3;\n  });\n  return buf;\n};\n\nconsole.log(nice);\nvar good = \"Fine.gooodies\";\n\nvar Welcome = function (_React$Component) {\n  _inherits(Welcome, _React$Component);\n\n  var _super = _createSuper(Welcome);\n\n  function Welcome() {\n    _classCallCheck(this, Welcome);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Welcome, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, nice, \" \", this.props.name);\n    }\n  }]);\n\n  return Welcome;\n}(React.Component);\n\nexport default Welcome;","map":{"version":3,"sources":["D:/Node js/IOT_project/Demo app/readerComopnent.js"],"names":["flexWrap","React","NodeFetch","fetch","fetchPolyfill","url","settings","method","then","res","json","channel","feeds","buf","field3","good","console","log","nice","iwillfetch","Welcome","props","name","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,KAAK,IAAIC,aAAjB,QAAqC,cAArC;AAIA,IAAIC,GAAG,GAAG,iEAAV;AAQA,IAAIC,QAAQ,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAf;AAEAJ,KAAK,CAACE,GAAD,EAAMC,QAAN,CAAL,CACKE,IADL,CACU,UAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,CADb,EAEKF,IAFL,CAEU,UAACE,IAAD,EAAU;AAGZ,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AAIA,MAAIC,GAAG,GAAED,KAAK,CAAC,CAAD,CAAL,CAASE,MAAlB;AACA,MAAOC,IAAP,GAAaF,GAAb,CAAOE,IAAP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,SAAOA,GAAP;AAEH,CAfL;;AAiBA,IAAMK,IAAI,GAAG,SAASC,UAAT,GAAsB;AAC/B,MAAIN,GAAJ;AACAV,EAAAA,KAAK,CAACE,GAAD,EAAMC,QAAN,CAAL,CACCE,IADD,CACM,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADT,EAECF,IAFD,CAEM,UAACE,IAAD,EAAU;AACZ,QAAIE,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACAC,IAAAA,GAAG,GAAED,KAAK,CAAC,CAAD,CAAL,CAASE,MAAd;AAEH,GAND;AAOA,SAAOD,GAAP;AACH,CAVD;;AAWAG,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,IAAMH,IAAI,GAAC,eAAX;;IAEMK,O;;;;;;;;;;;;;WACF,kBAAS;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAL,OAAY,KAAKG,KAAL,CAAWC,IAAvB,CADF;AAGD;;;;EANiBrB,KAAK,CAACsB,S;;AAS5B,eAAeH,OAAf","sourcesContent":["import { flexWrap } from \"styled-system\";\r\nimport React from \"React\"\r\nimport NodeFetch from 'node-fetch' \r\nimport {fetch as fetchPolyfill} from 'whatwg-fetch'\r\n\r\n\r\n// for only last 2 datas \r\nlet url = \"https://api.thingspeak.com/channels/838448/feeds.json?results=1\";\r\n\r\n// let url = \"https://api.thingspeak.com/channels/838448/field1.json\";\r\n\r\n\r\n// for whole data \r\n// let url = \"https://api.thingspeak.com/channels/838448/feeds.json\";\r\n\r\nlet settings = { method: \"Get\" };\r\n\r\nfetch(url, settings)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n        // do something with JSON\r\n        // console.log(json)\r\n        var channel = json.channel\r\n        var feeds = json.feeds\r\n\r\n        // console.log(channel)\r\n        // console.log(feeds)\r\n        var buf =feeds[0].field3;\r\n        const {good}=buf\r\n        console.log(buf);\r\n        return buf\r\n    \r\n    });\r\n\r\nconst nice = function iwillfetch() {\r\n    var buf\r\n    fetch(url, settings)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n        var feeds = json.feeds\r\n        buf =feeds[0].field3;\r\n        // return buf\r\n    });\r\n    return buf\r\n}\r\nconsole.log(nice)\r\n\r\nconst good=\"Fine.gooodies\"\r\n\r\nclass Welcome extends React.Component {\r\n    render() {\r\n        \r\n      return (\r\n        <h1>{nice} {this.props.name}</h1>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}